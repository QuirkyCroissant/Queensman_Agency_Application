version: '3'
services:
  frontend:
    build: 
      context: ./frontend/php_webinterface
      dockerfile: Dockerfile
    container_name: frontend_php
    ports:
      - "80:80"
    volumes:
      - ./frontend/php_webinterface:/var/www/html
      - ./non_relational/mongo_scripts/init/:/var/www/html/scripts
    depends_on:
      mysql:
        condition: service_healthy
      mongodb:
        condition: service_started
      networks:
      - backend_network

  backend:
    build: ./backend/python
    container_name: dbdata_python
    depends_on:
      - mysql
      - mongodb
    volumes:
      - ./relational/mysql_scripts:/backend/relational/mysql_scripts
      - ./non_relational/mongo_scripts/init:/backend/non_relational/mongo_scripts/init
    networks:
      - backend_network

  mysql:
    image: mysql:8.0
    container_name: mysqldb
    environment:
      MYSQL_USER: myuser
      MYSQL_DATABASE: mysql_queensmandb
      MYSQL_PASSWORD: mypassword
      MYSQL_ROOT_PASSWORD: Schikuta<3
    ports:
      - "3307:3306"
    volumes:
      - ./relational/mysql_scripts:/docker-entrypoint-initdb.d
      - mysqldb:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p$${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - backend_network

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - ./non_relational/mongo_scripts/init:/docker-entrypoint-initdb.d
      - mongodata:/data/db
    networks:
      - backend_network

    nginx:
      build:
        context: ./nginx
        dockerfile: Dockerfile
      container_name: nginx
      ports:
        - "443:443"
        - "80:80"
      depends_on:
        - frontend
        - backend
      networks:
        - backend_network

networks:
  backend_network:

volumes:
  mysqldb:
  mongodata:
